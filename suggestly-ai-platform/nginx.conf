server {
  listen 80;
  server_name suggestlyg4plus.io www.suggestlyg4plus.io;
  root /usr/share/nginx/html;
  index index.html;

  # Charset
  charset utf-8;

  # Security headers (static site safe defaults)
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
  # CSP tailored for this site (adjust if adding new external resources)
  add_header Content-Security-Policy "default-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; script-src 'self' 'unsafe-inline'; connect-src 'self'; object-src 'none'; base-uri 'self'; frame-ancestors 'self'; upgrade-insecure-requests" always;
  # Note: HSTS must be on TLS server block (port 443), not on 80

  # Gzip
  gzip on;
  gzip_types text/plain text/css application/javascript application/json image/svg+xml;

  # Static asset caching
  location ~* \.(?:css|js|svg|png|jpg|jpeg|webp|ico)$ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # Fonts (if served locally)
  location ~* \.(?:woff2|woff)$ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    add_header Access-Control-Allow-Origin "*";
    try_files $uri =404;
  }

  # HTML no-cache
  location ~* \.html$ {
    add_header Cache-Control "no-cache";
    try_files $uri =404;
  }

  # Clean URLs -> serve /path -> /path.html or /path/index.html
  location / {
    try_files $uri $uri/ $uri.html /index.html;
  }

  error_page 404 /404.html;
}

# TLS server block (example). Provide certs via your infra (e.g., AWS ACM/ELB or certbot).
# Uncomment and configure when terminating TLS on NGINX.
# server {
#   listen 443 ssl http2;
#   server_name suggestlyg4plus.io www.suggestlyg4plus.io;
#
#   ssl_certificate     /etc/ssl/certs/fullchain.pem;
#   ssl_certificate_key /etc/ssl/private/privkey.pem;
#
#   root /usr/share/nginx/html;
#   index index.html;
#   charset utf-8;
#
#   add_header X-Content-Type-Options "nosniff" always;
#   add_header X-Frame-Options "DENY" always;
#   add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#   add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
#   add_header Cross-Origin-Opener-Policy "same-origin" always;
#   add_header Cross-Origin-Resource-Policy "cross-origin" always;
#   add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
#   add_header X-Permitted-Cross-Domain-Policies "none" always;
#   add_header X-Download-Options "noopen" always;
#   add_header Origin-Agent-Cluster "?1" always;
#   add_header X-DNS-Prefetch-Control "off" always;
#   add_header Content-Security-Policy "default-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; script-src 'self' 'unsafe-inline' https://cdn.tailwindcss.com; connect-src 'self'; frame-ancestors 'none'; upgrade-insecure-requests" always;
#
#   gzip on;
#   gzip_types text/plain text/css application/javascript application/json image/svg+xml;
#
#   location ~* \.(?:css|js|svg|png|jpg|jpeg|webp|ico)$ {
#     add_header Cache-Control "public, max-age=31536000, immutable";
#     try_files $uri =404;
#   }
#   location ~* \.(?:woff2|woff)$ {
#     add_header Cache-Control "public, max-age=31536000, immutable";
#     add_header Access-Control-Allow-Origin "*";
#     try_files $uri =404;
#   }
#   location ~* \.html$ {
#     add_header Cache-Control "no-cache";
#     try_files $uri =404;
#   }
#   location / {
#     try_files $uri $uri/ $uri.html /index.html;
#   }
#   error_page 404 /404.html;
# }


