name: 🏗️ Terraform AWS Infrastructure Deploy

on:
  push:
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-deploy.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.6.0

jobs:
  terraform:
    name: 🏗️ Terraform Deploy to ${{ github.event.inputs.environment || 'staging' }}
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4

    - name: "🔐 Gate: Check AWS secrets"
      id: gate
      run: |
        if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ] || [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
          echo "proceed=false" >> $GITHUB_OUTPUT
          echo "⚠️ Missing AWS secrets. Skipping Terraform deployment steps."
        else
          echo "proceed=true" >> $GITHUB_OUTPUT
        fi
    
    - name: 🔧 Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
      if: steps.gate.outputs.proceed == 'true'

    - name: 🏗️ Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
      if: steps.gate.outputs.proceed == 'true'

    - name: 🔧 Terraform Init
      run: |
        cd terraform
        terraform init
      if: steps.gate.outputs.proceed == 'true'

    - name: 📋 Terraform Plan
      run: |
        cd terraform
        terraform plan -var="environment=${{ github.event.inputs.environment || 'staging' }}"
      if: steps.gate.outputs.proceed == 'true'

    - name: 🚀 Terraform Apply
      if: ${{ github.ref == 'refs/heads/main' && steps.gate.outputs.proceed == 'true' }}
      run: |
        cd terraform
        terraform apply -auto-approve -var="environment=${{ github.event.inputs.environment || 'staging' }}"

    - name: 📊 Output Infrastructure Details
      run: |
        cd terraform
        terraform output -json > ../terraform-outputs.json
      if: steps.gate.outputs.proceed == 'true'

    - name: 📤 Upload Terraform Outputs
      uses: actions/upload-artifact@v3
      with:
        name: terraform-outputs
        path: terraform-outputs.json
      if: steps.gate.outputs.proceed == 'true'
